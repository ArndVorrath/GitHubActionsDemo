name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [workflow_dispatch]
jobs:
  Send-Mail:
    name: Send an email
    runs-on: self-hosted
    steps:   
      - name: Send an email
        uses: betterfor/action-send-mail@main
        with:
          # Reqired mail server address 
          server_address: smtp.googlemail.com
          # Optional port (defaults to 465)
          server_port: 465
          # Optional (recommended): mail server username
          # username: ${{secrets.MAIL_USERNAME}}
          username: qammeister@gmail.com
          # Optional (recommended): mail server password
          # password: ${{secrets.MAIL_PASSWORD}}
          password: QAMMeister2024!
          # Required mail subject
          subject: Github Actions job results
           # Required recipients address
          to: QAMMeister@gmail.com
          # Required sender full name (address can be skipped)
          from: ${{secrets.MAIL_ADDRESS}}
          # Optional plain body
          body: Build job of ${{github.repository}} completed successfully!
          # Optional HTML body read from file
          # html_body: file://README.md
          # Optional carbon copy recipients
          # cc: a@example.com,b@example.com
          # Optional recipient of the email response
          # reply_to: luke@example.com# Optional Message ID this message is replying to
          # in_reply_to: <random-luke@example.com>
          # Optional converting Markdown to HTML (set content_type to text/html too)
          # convert_mardown: true
          # Optional attachments
          # attachments: README.md
          # Optional priority: 'high', 'normal' (default) or 'low'
          # priority: low
  Check-Out:
    name: Check out repository code
    runs-on: self-hosted
    steps:    
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: main
  SonarQube-Scan:
    name: Execute SonarQube Scan
    runs-on: self-hosted
    needs: Check-Out
    steps: 
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with: 
          projectBaseDir: ${{ github.workspace }}/${{ github.ref_name }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 
  SonarQube-Show:
    name: Show SonarQube Report
    runs-on: self-hosted
    needs: SonarQube-Scan
    steps:
      - name: Open SonarQube Page
        run: xdg-open http://10.0.2.15:9000/dashboard?id=GitHubActions-Demo
  DockerHub-Login:
    name: Login to DockerHub
    runs-on: self-hosted
    needs: [SonarQube-Scan] 
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  Docker-Build-Push: 
      name: Build and Push Docker Image
      runs-on: self-hosted
      needs: [SonarQube-Scan,DockerHub-Login] 
      steps:
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: arndvorrath/githubactionsdemo:latest
  Open-DockerHub: 
      name: Open DockerHub Repository
      runs-on: self-hosted
      needs: [Docker-Build-Push] 
      steps:
      - name: Open DockerHub page
        run: xdg-open https://hub.docker.com/repository/docker/arndvorrath/githubactionsdemo/general
  Docker-Housekeeping:
        name: Stop old Docker container
        runs-on: self-hosted
        needs: [Docker-Build-Push]
        steps:
        - name: Docker stop running containers
          run: docker stop $(docker ps -a -q)
  Docker-Deploy:
        name: Deploy new Docker container
        runs-on: self-hosted
        needs: [Docker-Housekeeping]      
        environment:
         name: staging
         url: http://10.0.2.15:49160
        steps:
         - name: Docker Deploy
           run: docker run -p 49160:8080 -d arndvorrath/githubactionsdemo:latest
  #Open-HelloCGI-Page:
  #      name: Open 'Hello CGI' page
  #      runs-on: self-hosted
  #      needs: Docker-Deploy
  #      steps:
  #      - name: Open 'Hello CGI' page
  #        run: xdg-open http://10.0.2.15:49160

